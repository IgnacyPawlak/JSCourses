{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\WSB\\\\JSCourses\\\\JSProject\\\\JSProject\\\\ClientApp\\\\src\\\\components\\\\StudentCourses.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactDOM } from 'react';\nimport { Container } from 'reactstrap';\nimport Markup from 'react-html-markup'; //import cupcake from '../resources/img/cupcake.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar materialsTemp0 = [['img', 'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'], ['text', `You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: \n    <ul>\n    <li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> \n    <li>How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers)</li>\n    <li> How many standard or modified pushups you can do at a time</li>\n    <li>How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index</li>\n    </ul>`]];\nvar materialsTemp1 = [['img', 'https://cdn.mos.cms.futurecdn.net/v44n2mBJgaRoCkkFGjDtRP.jpeg'], ['text', `How do I run without getting tired?\n    <b>Warm Up. Avoid running without a warm-up first.</b> Performing some dynamic stretches and low-intensity aerobic exercise for five to 15 minutes before a run can help to reduce injury risk by warming up your muscles. Factor each warm-up into your training plan to avoid running out of time or coming up with excuses.`]]; //TODO delete hardcode\n\nvar userCourses = [{\n  courseId: 0,\n  date: '01-02-22',\n  title: 'Get fit',\n  description: 'Dieting, excercise and other important things',\n  teacher: 'Chodakowska',\n  materials: materialsTemp0\n}, {\n  courseId: 1,\n  date: '02-02-22',\n  title: 'Get fit 2',\n  description: 'Dieting, excercise and other important things',\n  teacher: 'Chodakowska',\n  materials: materialsTemp1\n}];\nexport class StudentCourses extends Component {\n  //info dla niewtajemniczonych: student widzi swoje wykupione kursy (isBought)\n  //fajnie jakby już przychodziła tablica z kursami użytkownika\n  constructor(props) {\n    super(props);\n    this.state = {\n      //TODO set courses to courses where student's relation to courses isBought == true\n      courses: userCourses,\n      //TODO set role to user's role\n      role: 'teacher'\n    };\n  } //TODO make page available only for students \n\n\n  courseDetailsToggle(id) {\n    document.getElementById(`${id}`).classList.toggle(\"d-none\");\n  }\n\n  render() {\n    const CoursesTables = this.state.courses.map(course => {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover w-100 mt-5 border-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-bottom\",\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              title: \"Click to hide/show details\",\n              className: \"w-100 border-0\",\n              role: \"button\",\n              onClick: () => {\n                this.courseDetailsToggle(course.courseId);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: course.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 169\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, course.courseId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: course.courseId,\n          className: \"d-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"w-100 border-top-0 text-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-4\",\n              children: [\"Course date: \", course.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 44\n              }, this), \"Teacher: \", course.teacher, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-6\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), course.materials.map(material => {\n            if (material[0] == 'img') {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: material[1],\n                    alt: \"image\",\n                    className: \"w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this);\n            } else if (material[0] == 'text') {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(Markup, {\n                    className: \"text-justify\",\n                    htmlString: material[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n    });\n    let Courses;\n\n    if (this.state.courses.length > 0) {\n      Courses = /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-100\",\n        children: CoursesTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this);\n    } else {\n      Courses = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't signed up for any courses yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My courses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-primary m-2\",\n          to: \"/all-courses\",\n          children: \"See all our courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), Courses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nStudentCourses.displayName = StudentCourses.name;","map":{"version":3,"sources":["D:/Project/WSB/JSCourses/JSProject/JSProject/ClientApp/src/components/StudentCourses.js"],"names":["React","Component","Link","ReactDOM","Container","Markup","materialsTemp0","materialsTemp1","userCourses","courseId","date","title","description","teacher","materials","StudentCourses","constructor","props","state","courses","role","courseDetailsToggle","id","document","getElementById","classList","toggle","render","CoursesTables","map","course","material","Courses","length","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactDOM } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Markup from 'react-html-markup';\r\n//import cupcake from '../resources/img/cupcake.png';\r\n\r\nvar materialsTemp0 = [\r\n  [\r\n    'img',\r\n    'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'\r\n  ],\r\n  [\r\n    'text',\r\n    `You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: \r\n    <ul>\r\n    <li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> \r\n    <li>How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers)</li>\r\n    <li> How many standard or modified pushups you can do at a time</li>\r\n    <li>How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index</li>\r\n    </ul>`\r\n  ]\r\n];\r\n\r\nvar materialsTemp1 = [\r\n  [\r\n    'img',\r\n    'https://cdn.mos.cms.futurecdn.net/v44n2mBJgaRoCkkFGjDtRP.jpeg'\r\n  ],\r\n  [\r\n    'text',\r\n    `How do I run without getting tired?\r\n    <b>Warm Up. Avoid running without a warm-up first.</b> Performing some dynamic stretches and low-intensity aerobic exercise for five to 15 minutes before a run can help to reduce injury risk by warming up your muscles. Factor each warm-up into your training plan to avoid running out of time or coming up with excuses.`\r\n  ]\r\n];\r\n\r\n\r\n//TODO delete hardcode\r\nvar userCourses = [\r\n  {\r\n    courseId: 0,\r\n    date: '01-02-22',\r\n    title: 'Get fit',\r\n    description: 'Dieting, excercise and other important things',\r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp0\r\n\r\n  },\r\n  {\r\n    courseId: 1,\r\n    date: '02-02-22',\r\n    title: 'Get fit 2',\r\n    description: 'Dieting, excercise and other important things',\r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp1\r\n  },\r\n];\r\n\r\nexport class StudentCourses extends Component {\r\n  static displayName = StudentCourses.name;\r\n\r\n  //info dla niewtajemniczonych: student widzi swoje wykupione kursy (isBought)\r\n  //fajnie jakby już przychodziła tablica z kursami użytkownika\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //TODO set courses to courses where student's relation to courses isBought == true\r\n      courses: userCourses,\r\n      //TODO set role to user's role\r\n      role: 'teacher'\r\n    };\r\n  }\r\n\r\n  //TODO make page available only for students \r\n\r\n  courseDetailsToggle(id) {\r\n    document.getElementById(`${id}`).classList.toggle(\"d-none\");\r\n  }\r\n\r\n  render() {\r\n    const CoursesTables = this.state.courses.map((course) => {\r\n      return (\r\n        <table className=\"table table-hover w-100 mt-5 border-0\">\r\n          <thead>\r\n            <tr key={course.courseId} className=\"border-bottom\">\r\n              <th colSpan={2} title='Click to hide/show details' className=\"w-100 border-0\" role='button' onClick={() => { this.courseDetailsToggle(course.courseId) }}><h2>{course.title}</h2>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id={course.courseId} className='d-none'>\r\n            <tr className='w-100 border-top-0 text-secondary'>\r\n              <td className='col-4'>\r\n                Course date: {course.date} <br />\r\n                Teacher: {course.teacher} <br />\r\n              </td>\r\n              <td className='col-6'>\r\n                {course.description}\r\n              </td>\r\n            </tr>\r\n            {course.materials.map((material) => {\r\n              if (material[0] == 'img') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <img src={material[1]} alt=\"image\" className='w-100' />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n              else if (material[0] == 'text') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <Markup className='text-justify' htmlString={material[1]} />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n            })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      )\r\n    })\r\n\r\n    let Courses;\r\n    if (this.state.courses.length > 0) {\r\n      Courses =\r\n        <table className='w-100'>\r\n          {CoursesTables}\r\n        </table>\r\n    }\r\n    else {\r\n      Courses = <p>You haven't signed up for any courses yet.</p>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h1>My courses:</h1>\r\n          <Link className=\"btn btn-primary m-2\" to=\"/all-courses\">See all our courses</Link>\r\n        </div>\r\n\r\n        {Courses}\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}