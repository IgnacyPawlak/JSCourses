{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagma\\\\Documents\\\\aa WSB\\\\sem 6 JS\\\\projekt\\\\JSCourses\\\\JSProject\\\\JSProject\\\\ClientApp\\\\src\\\\components\\\\UserCourses.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactDOM } from 'react';\nimport { Container } from 'reactstrap';\nimport Markup from 'react-html-markup'; //import cupcake from '../resources/img/cupcake.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar materialsTemp = [['img', 'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'], ['text', 'You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: <ul><li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> </ul> How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers) How many standard or modified pushups you can do at a time    How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index']]; //TODO delete hardcode\n\nvar userCourses = [{\n  courseId: 0,\n  date: '01-02-22',\n  title: 'Get fit',\n  description: 'Dieting, excercise and other important things',\n  teacher: 'Chodakowska',\n  materials: materialsTemp\n}, {\n  courseId: 1,\n  date: '02-02-22',\n  title: 'Get fit 2',\n  description: 'Dieting, excercise and other important things',\n  teacher: 'Chodakowska',\n  materials: materialsTemp\n}];\nexport class UserCourses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: userCourses\n    };\n  }\n\n  render() {\n    //TODO course details on display  \n    const CoursesTables = this.state.courses.map(course => {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover w-100 mt-5 border-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-bottom\",\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              className: \"w-100 border-0\",\n              children: course.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, course.courseId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"w-100 border-top-0  text-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-4\",\n              children: [\"Course date: \", course.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 44\n              }, this), \"Teacher: \", course.teacher, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-6\",\n              children: course.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), course.materials.map(material => {\n            if (material[0] == 'img') {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: material[1],\n                    alt: \"image\",\n                    className: \"w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this);\n            } else if (material[0] == 'text') {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(Markup, {\n                    htmlString: material[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    });\n    let Courses;\n\n    if (this.state.courses.length > 0) {\n      Courses = /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-100\",\n        children: CoursesTables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this);\n    } else {\n      Courses = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't signed up for any courses yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My courses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-primary m-2\",\n          to: \"/all-courses\",\n          children: \"See all our courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), Courses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nUserCourses.displayName = UserCourses.name;","map":{"version":3,"sources":["C:/Users/dagma/Documents/aa WSB/sem 6 JS/projekt/JSCourses/JSProject/JSProject/ClientApp/src/components/UserCourses.js"],"names":["React","Component","Link","ReactDOM","Container","Markup","materialsTemp","userCourses","courseId","date","title","description","teacher","materials","UserCourses","constructor","props","state","courses","render","CoursesTables","map","course","material","Courses","length","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactDOM } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Markup from 'react-html-markup';\r\n//import cupcake from '../resources/img/cupcake.png';\r\n\r\nvar materialsTemp = [\r\n  [\r\n    'img', \r\n    'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'\r\n  ],\r\n  [\r\n    'text',\r\n    'You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: <ul><li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> </ul> How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers) How many standard or modified pushups you can do at a time    How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index'\r\n  ]\r\n];\r\n \r\n\r\n//TODO delete hardcode\r\nvar userCourses = [\r\n  {\r\n    courseId: 0,\r\n    date: '01-02-22', \r\n    title: 'Get fit', \r\n    description: 'Dieting, excercise and other important things', \r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp \r\n     \r\n  },\r\n  {\r\n    courseId: 1,\r\n    date: '02-02-22', \r\n    title: 'Get fit 2', \r\n    description: 'Dieting, excercise and other important things', \r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp\r\n  },\r\n];\r\n\r\nexport class UserCourses extends Component {\r\n  static displayName = UserCourses.name;\r\n\r\n  constructor(props) {\r\n    super(props);    \r\n    this.state = { \r\n      courses: userCourses\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n//TODO course details on display  \r\n    const CoursesTables = this.state.courses.map((course) => {\r\n      return (\r\n        <table className=\"table table-hover w-100 mt-5 border-0\">\r\n          <thead>\r\n            <tr key={course.courseId} className=\"border-bottom\">\r\n              <th colSpan={2} className=\"w-100 border-0\">{course.title}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className='w-100 border-top-0  text-secondary'>\r\n              <td className='col-4'>\r\n                Course date: {course.date} <br />\r\n                Teacher: {course.teacher} <br />\r\n              </td>\r\n              <td className='col-6'>\r\n                {course.description}\r\n               \r\n              </td>\r\n              {/* <td className='col d-flex justify-content-end'>\r\n                  {/* TODO link do szczegółów kursu - inne szczegóły dla studenta, nauczyciela i admina*/}\r\n                {/* <div className='btn btn-success'>See details</div> */}\r\n             \r\n              {/* </td> */} \r\n            </tr>\r\n            {/* { Materials } */}\r\n\r\n            {course.materials.map((material) => {\r\n              if (material[0] == 'img') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <img src={material[1]} alt=\"image\"  className='w-100'/>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n              else  if (material[0] == 'text') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <Markup htmlString={material[1]}/>\r\n                     {/* {material[1]} */}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n               \r\n            })\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n      )\r\n    })\r\n\r\n    let Courses;\r\n    if(this.state.courses.length > 0) {\r\n      Courses  =  \r\n      <table className='w-100'>\r\n        { CoursesTables }       \r\n      </table>\r\n    }\r\n    else {\r\n      Courses = <p>You haven't signed up for any courses yet.</p>\r\n    }\r\n   \r\n    return (    \r\n      <div>\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h1>My courses:</h1>  \r\n          <Link className=\"btn btn-primary m-2\" to=\"/all-courses\">See all our courses</Link>                    \r\n        </div>\r\n      \r\n      { Courses }\r\n\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}