{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagma\\\\Documents\\\\aa WSB\\\\sem 6 JS\\\\projekt\\\\JSCourses\\\\JSProject\\\\JSProject\\\\ClientApp\\\\src\\\\components\\\\api-authorization\\\\LoginMenu.js\";\nimport React, { Component, Fragment } from 'react';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport authService from './AuthorizeService';\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LoginMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //TODO uncomment & delete hardcode:\n      // isAuthenticated: false,\n      // userName: null\n      isAuthenticated: true,\n      userName: 'Basia'\n    };\n  } //TODO ucomment hardcode:\n  // componentDidMount() {\n  //     this._subscription = authService.subscribe(() => this.populateState());\n  //     this.populateState();\n  // }\n  // componentWillUnmount() {\n  //     authService.unsubscribe(this._subscription);\n  // }\n  // async populateState() {\n  //     const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\n  //     this.setState({\n  //         isAuthenticated,\n  //         userName: user && user.name\n  //     });\n  // }\n\n\n  render() {\n    const {\n      isAuthenticated,\n      userName\n    } = this.state;\n\n    if (!isAuthenticated) {\n      const registerPath = `${ApplicationPaths.Register}`;\n      const loginPath = `${ApplicationPaths.Login}`;\n      return this.anonymousView(registerPath, loginPath);\n    } else {\n      //TODO zmienić, żeby kliknięcie w Hello, user! nie powodowało wylogowania tylko przejście do szczegółów użytkownika\n      const profilePath = `${ApplicationPaths.Profile}`;\n      const logoutPath = {\n        pathname: `${ApplicationPaths.LogOut}`,\n        state: {\n          local: true\n        }\n      };\n      return this.authenticatedView(userName, profilePath, logoutPath);\n    }\n  }\n\n  authenticatedView(userName, profilePath, logoutPath) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n        className: \"text-success\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          tag: Link,\n          className: \"text-dark\",\n          to: profilePath,\n          children: [\"Hello, \", userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        class: \"text-secondary\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          tag: Link,\n          className: \"text-dark\",\n          to: logoutPath,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n\n  anonymousView(registerPath, loginPath) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          tag: Link,\n          className: \"text-dark\",\n          to: registerPath,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          tag: Link,\n          className: \"text-dark\",\n          to: loginPath,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dagma/Documents/aa WSB/sem 6 JS/projekt/JSCourses/JSProject/JSProject/ClientApp/src/components/api-authorization/LoginMenu.js"],"names":["React","Component","Fragment","NavItem","NavLink","Link","authService","ApplicationPaths","LoginMenu","constructor","props","state","isAuthenticated","userName","render","registerPath","Register","loginPath","Login","anonymousView","profilePath","Profile","logoutPath","pathname","LogOut","local","authenticatedView"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //TODO uncomment & delete hardcode:\r\n            // isAuthenticated: false,\r\n            // userName: null\r\n            isAuthenticated: true,\r\n            userName: 'Basia'\r\n        };\r\n    }\r\n\r\n    //TODO ucomment hardcode:\r\n    // componentDidMount() {\r\n    //     this._subscription = authService.subscribe(() => this.populateState());\r\n    //     this.populateState();\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     authService.unsubscribe(this._subscription);\r\n    // }\r\n    \r\n    // async populateState() {\r\n    //     const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n    //     this.setState({\r\n    //         isAuthenticated,\r\n    //         userName: user && user.name\r\n    //     });\r\n    // }\r\n\r\n    render() {    \r\n        const { isAuthenticated, userName } = this.state;\r\n\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            //TODO zmienić, żeby kliknięcie w Hello, user! nie powodowało wylogowania tylko przejście do szczegółów użytkownika\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem className=\"text-success\">\r\n                <NavLink tag={Link} className=\"text-dark\" to={profilePath}>Hello, {userName}!</NavLink>\r\n            </NavItem>\r\n            <NavItem class=\"text-secondary\">\r\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>Logout</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}