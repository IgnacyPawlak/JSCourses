[{"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\index.js":"1","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\App.js":"2","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Layout.js":"3","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Home.js":"4","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\FetchData.js":"5","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Calendar.js":"6","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Payments.js":"7","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\AllCourses.js":"8","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\AuthorizeRoute.js":"9","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\ApiAuthorizationRoutes.js":"10","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\ApiAuthorizationConstants.js":"11","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\NavMenu.js":"12","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\AuthorizeService.js":"13","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\Login.js":"14","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\Logout.js":"15","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\LoginMenu.js":"16","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\StudentCourses.js":"17","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\TeacherCourses.js":"18"},{"size":927,"mtime":1651476774323,"results":"19","hashOfConfig":"20"},{"size":1542,"mtime":1651659060562,"results":"21","hashOfConfig":"20"},{"size":373,"mtime":1651476774318,"results":"22","hashOfConfig":"20"},{"size":1734,"mtime":1651476774317,"results":"23","hashOfConfig":"20"},{"size":1723,"mtime":1651476774317,"results":"24","hashOfConfig":"20"},{"size":2320,"mtime":1651659060573,"results":"25","hashOfConfig":"20"},{"size":2774,"mtime":1651659060573,"results":"26","hashOfConfig":"20"},{"size":4655,"mtime":1651659060573,"results":"27","hashOfConfig":"20"},{"size":1909,"mtime":1651476774320,"results":"28","hashOfConfig":"20"},{"size":1416,"mtime":1651476774320,"results":"29","hashOfConfig":"20"},{"size":1195,"mtime":1651476774320,"results":"30","hashOfConfig":"20"},{"size":3086,"mtime":1651659060573,"results":"31","hashOfConfig":"20"},{"size":8006,"mtime":1651476774321,"results":"32","hashOfConfig":"20"},{"size":5460,"mtime":1651476774321,"results":"33","hashOfConfig":"20"},{"size":5114,"mtime":1651476774322,"results":"34","hashOfConfig":"20"},{"size":2401,"mtime":1651659060573,"results":"35","hashOfConfig":"20"},{"size":5072,"mtime":1651659060573,"results":"36","hashOfConfig":"20"},{"size":10053,"mtime":1651659060573,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vz5k1g",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\index.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\App.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Layout.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Home.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\FetchData.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Calendar.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\Payments.js",["79","80","81","82","83","84"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport { Form, Modal, ModalFooter } from 'reactstrap';\r\n//TODO delete hardcode\r\nvar userCourses = [\r\n  {\r\n    courseId: 0,  \r\n    courseTitle: 'Get fit', \r\n    coursePrice: 100,\r\n    accessTimeDays: 30,\r\n    isBought: 'yes'\r\n  },\r\n  {\r\n    courseId: 1,\r\n    courseTitle: 'Maths', \r\n    coursePrice: 50,\r\n    accessTimeDays: 60,\r\n    isBought: 'no'\r\n  },\r\n];\r\n\r\nexport class Payments extends Component {\r\n  static displayName = Payments.name;\r\n\r\n//info dla niewtajemniczonych: \r\n//student widzi swoje podsumowanie wykupionych kursów: tytuł kursu, dni dostępu, cena \r\n//widok admina - zobaczę czy starczy czasu, jeśli tak to:\r\n//admin widzi listę kursów: nazwa użytkownika, tytuł kursu, dni dostępu, cena \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      courses: userCourses,\r\n      showPaymentModal: false,\r\n      //TODO ustawić na rolę użytkownika\r\n      role: 'student'\r\n    };\r\n  }\r\n\r\n//TODO student widzi swoje podsumowanie wykupionych kursów: tytuł kursu, dni dostępu, cena \r\n//TODO ? admin widzi listę kursów: nazwa użytkownika, tytuł kursu, dni dostępu, cena \r\n\r\n buyCourse() {\r\n  let newCourseTitle = document.getElementById(\"newCourseTitle\").value;\r\n  var courseIndex = this.state.courses.findIndex(function(title) {\r\n    return title = newCourseTitle;\r\n  });\r\n  console.log(courseIndex);\r\n  this.setState({ showPaymentModal: false });\r\n }\r\n /* TODO: role - student */\r\n  render() {\r\n    \r\n   \r\n    const CoursesCalendarTable = this.state.courses.map((course) => {\r\n      if(course.isBought == 'yes') {\r\n      return (\r\n        <tr key={course.courseId}>\r\n          <td className='col-6'>{course.courseTitle}</td>      \r\n          <td className='col-3'>{course.accessTimeDays} days</td>  \r\n          <td className='col-3'>${course.coursePrice}</td>                          \r\n        </tr>\r\n      )\r\n      }\r\n    });\r\n\r\n    let Table;\r\n    if(this.state.courses.length > 0) {\r\n      Table  = \r\n        <table className=\"table table-hover\">\r\n      <thead>      \r\n        <tr>\r\n          <th className='col-6'>Course</th>          \r\n          <th className='col-3'>Access</th>\r\n          <th className='col-3'>Price</th>          \r\n        </tr>\r\n      </thead>\r\n      <tbody ref={this.tableBody}>         \r\n        { CoursesCalendarTable }\r\n      </tbody>\r\n    </table>\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h1>My payments:</h1>  \r\n          <Link className=\"btn btn-primary m-2\" to=\"/all-courses\">See all our courses</Link>\r\n                    \r\n        </div>\r\n      { Table }\r\n\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\AllCourses.js",["85","86","87","88"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from 'reactstrap';\r\nimport { Form } from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\n\r\n//TODO delete hardcode\r\nvar allCourses = [\r\n  {\r\n    courseId: 0,\r\n    date: '01-02-22',\r\n    title: 'Get fit',\r\n    description: 'Dieting, excercise and other important things',\r\n    teacher: 'Chodakowska',\r\n    isBought: 'yes' //właściwość użytkownika - czy ma wykupiony dostęp do kursu o danym courseId\r\n\r\n  },\r\n  {\r\n    courseId: 1,\r\n    date: '02-02-22',\r\n    title: 'Get fit 2',\r\n    description: 'Dieting, excercise and other important things',\r\n    teacher: 'Chodakowska',\r\n    isBought: 'no'\r\n  },\r\n  {\r\n    courseId: 2,\r\n    date: '02-05-22',\r\n    title: 'Learn maths',\r\n    description: '2+2=4',\r\n    teacher: 'Pitagoras',\r\n    isBought: 'yes'\r\n  },\r\n  {\r\n    courseId: 3,\r\n    date: '14-10-22',\r\n    title: 'Learn music',\r\n    description: 'la la la',\r\n    teacher: 'Bethoven',\r\n    isBought: 'no'\r\n  },\r\n];\r\n\r\nexport class AllCourses extends Component {\r\n  static displayName = AllCourses.name;\r\n//info dla niewtajemniczonych: wszyscy zalogowani widzą listę kursów\r\n//student ma widoczny przycisk \"buy course\", co po wybraniu kursu (i pewnie wpisaniu bardzo \"legitnych\" cyferek konta) spowoduje zmianę statusu isBought w relacji student-course\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //TODO set courses to all courses in database, delete hardcode\r\n      courses: allCourses,\r\n      //TODO set user data to current user, delete hardcode\r\n      userId: 0,\r\n      role: 'student'\r\n    };\r\n  }\r\n\r\n//TODO make this page available to all logged users\r\n\r\n  savePayment() {\r\n    //TODO zmiana statusu isBought dla kursu znalezionego po courseId dla obecnego użytkownika\r\n    this.closePaymentModal();\r\n  }\r\n\r\n  openPaymentModal() {\r\n    document.getElementById(\"payment-modal\").style.display = 'block';\r\n  }\r\n  closePaymentModal() {\r\n    document.getElementById(\"payment-modal\").style.display = 'none';\r\n  }\r\n\r\n  render() {\r\n    const paymentForm = \r\n        <form>\r\n          ...\r\n        </form>\r\n      ;\r\n    const paymentModal = this.state.courses.map((course) => {\r\n      return (\r\n        <div class=\"modal\" id=\"payment-modal\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"popupTitle\">Access new course</h5>\r\n                <button type=\"button\" class=\"close\" onClick={() => {this.closePaymentModal()}} aria-label=\"Cancel\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                {paymentForm}\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" onClick={() => { this.closePaymentModal()}}>Close</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" onClick={() => {this.savePayment()}}>Save changes</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n\r\n\r\n    const CoursesTable = this.state.courses.map((course) => {\r\n      return (\r\n        <tr key={course.courseId}>\r\n          <td>{course.date}</td>\r\n          <td>{course.title}</td>\r\n          <td>{course.description}</td>\r\n          <td>{course.teacher}</td>\r\n          <td className='d-flex justify-content-end'>\r\n          { this.state.role == 'student' ?\r\n          (course.isBought == 'yes' ? <Button className='btn btn-sm btn-light disabled'>Accessed</Button> : <Button className='btn btn-sm btn-warning' onClick={() => { this.openPaymentModal() }}>Buy now</Button>) : <span></span>\r\n          }\r\n      </td>        </tr>\r\n      )\r\n    })\r\n\r\n    let Table;\r\n    if (this.state.courses.length > 0) {\r\n      Table =\r\n        <table class=\"table table-hover z-index-0\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date time</th>\r\n              <th>Course</th>\r\n              <th>Description</th>\r\n              <th colSpan={2}>Teacher</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody ref={this.tableBody}>\r\n            {CoursesTable}\r\n          </tbody>\r\n        </table>\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        { paymentModal }\r\n        <div>\r\n          <div className=\"d-flex justify-content-between mb-3\">\r\n            <h1>Available courses:</h1>\r\n            <Link className=\"btn btn-primary m-2\" to=\"/user-courses\">Go back to my courses</Link>\r\n          </div>\r\n          {Table}\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\AuthorizeRoute.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\ApiAuthorizationRoutes.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\ApiAuthorizationConstants.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\NavMenu.js",["89","90","91"],"import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginMenu } from './api-authorization/LoginMenu';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  //info dla niewtajemniczonych: są frontowe obejścia do podstron, jak będzie wam się nudzić to możecie zrobić zabezpieczenia backowe\r\n//TODO: coś się kopło z logowaniem jak pisałam na msg, sprawdźcie proszę :)\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n      //TODO delete hardcode\r\n      role: 'teacher'\r\n    };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const studentCoursesNavItem =\r\n      <NavItem>\r\n        <NavLink tag={Link} className=\"text-dark\" to=\"/student-courses\">\r\n          My Courses\r\n        </NavLink>\r\n      </NavItem>\r\n      ;\r\n      const teacherCoursesNavItem =\r\n      <NavItem>\r\n        <NavLink tag={Link} className=\"text-dark\" to=\"/teacher-courses\">\r\n          My Classes\r\n        </NavLink>\r\n      </NavItem>\r\n      ;\r\n      \r\n      \r\n    const paymentsNavItem =\r\n      <NavItem>\r\n        <NavLink tag={Link} className=\"text-dark\" to=\"/payments\">\r\n          Payments\r\n        </NavLink>\r\n      </NavItem>\r\n      ;\r\n    const calendarNavItem =\r\n      <NavItem>\r\n        <NavLink tag={Link} className=\"text-dark\" to=\"/calendar\">\r\n          Calendar\r\n        </NavLink>\r\n      </NavItem>\r\n      ;\r\n    let menuNavItems;\r\n    if (this.state.role == 'student') {\r\n      menuNavItems =\r\n        <span className='d-flex'>\r\n          {studentCoursesNavItem}\r\n          {calendarNavItem}\r\n          {paymentsNavItem}\r\n        </span>\r\n        ;\r\n    }\r\n    else if (this.state.role == 'teacher') {\r\n      //TODO add teacherCourses, addCourseMaterials\r\n      menuNavItems =\r\n        <span className='d-flex'>\r\n          { teacherCoursesNavItem }\r\n          {calendarNavItem}\r\n        </span>\r\n        ;\r\n    }\r\n    else if (this.state.role == 'admin') {\r\n      //TODO add allPayments?, addCourse\r\n      menuNavItems =\r\n        <span className='d-flex'>\r\n          {calendarNavItem}\r\n        </span>\r\n        ;\r\n    }\r\n\r\n    return (\r\n\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Studdier</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n\r\n                {menuNavItems}\r\n\r\n                <LoginMenu>\r\n                </LoginMenu>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\AuthorizeService.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\api-authorization\\LoginMenu.js",[],"D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\StudentCourses.js",["92","93","94","95","96","97","98"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactDOM } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Markup from 'react-html-markup';\r\n//import cupcake from '../resources/img/cupcake.png';\r\n\r\nvar materialsTemp0 = [\r\n  [\r\n    'img', \r\n    'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'\r\n  ],\r\n  [\r\n    'text',\r\n    `You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: \r\n    <ul>\r\n    <li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> \r\n    <li>How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers)</li>\r\n    <li> How many standard or modified pushups you can do at a time</li>\r\n    <li>How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index</li>\r\n    </ul>`\r\n  ]\r\n];\r\n\r\nvar materialsTemp1 = [\r\n  [\r\n    'img', \r\n    'https://cdn.mos.cms.futurecdn.net/v44n2mBJgaRoCkkFGjDtRP.jpeg'\r\n  ],\r\n  [\r\n    'text',\r\n    `How do I run without getting tired?\r\n    <b>Warm Up. Avoid running without a warm-up first.</b> Performing some dynamic stretches and low-intensity aerobic exercise for five to 15 minutes before a run can help to reduce injury risk by warming up your muscles. Factor each warm-up into your training plan to avoid running out of time or coming up with excuses.`\r\n  ]\r\n];\r\n \r\n\r\n//TODO delete hardcode\r\nvar userCourses = [\r\n  {\r\n    courseId: 0,\r\n    date: '01-02-22', \r\n    title: 'Get fit', \r\n    description: 'Dieting, excercise and other important things', \r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp0 \r\n     \r\n  },\r\n  {\r\n    courseId: 1,\r\n    date: '02-02-22', \r\n    title: 'Get fit 2', \r\n    description: 'Dieting, excercise and other important things', \r\n    teacher: 'Chodakowska',\r\n    materials: materialsTemp1\r\n  },\r\n];\r\n\r\nexport class StudentCourses extends Component {\r\n  static displayName = StudentCourses.name;\r\n\r\n//info dla niewtajemniczonych: student widzi swoje wykupione kursy (isBought)\r\n//fajnie jakby już przychodziła tablica z kursami użytkownika\r\n\r\n  constructor(props) {\r\n    super(props);    \r\n    this.state = { \r\n      //TODO set courses to courses where student's relation to courses isBought == true\r\n      courses: userCourses,\r\n      //TODO set role to user's role\r\n      role: 'teacher'\r\n    };\r\n  }\r\n\r\n  //TODO make page available only for students \r\n  \r\n  courseDetailsToggle(id) {\r\n    document.getElementById(`${id}`).classList.toggle(\"d-none\");\r\n  }\r\n\r\n  render() {\r\n      const CoursesTables = this.state.courses.map((course) => {\r\n      return (\r\n        <table className=\"table table-hover w-100 mt-5 border-0\">\r\n          <thead>\r\n            <tr key={course.courseId} className=\"border-bottom\">\r\n              <th colSpan={2} title='Click to hide/show details'className=\"w-100 border-0\" role='button' onClick={() => {this.courseDetailsToggle(course.courseId)}}><h2>{course.title}</h2>\r\n         </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id={course.courseId} className='d-none'>\r\n            <tr className='w-100 border-top-0 text-secondary'>\r\n              <td className='col-4'>\r\n                Course date: {course.date} <br />\r\n                Teacher: {course.teacher} <br />\r\n              </td>\r\n              <td className='col-6'>\r\n                {course.description}\r\n              </td>\r\n            </tr>\r\n            {course.materials.map((material) => {\r\n              if (material[0] == 'img') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <img src={material[1]} alt=\"image\"  className='w-100'/>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n              else  if (material[0] == 'text') {\r\n                return (\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <Markup className='text-justify' htmlString={material[1]}/>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n               \r\n            })\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n      )\r\n    })\r\n\r\n    let Courses;\r\n    if(this.state.courses.length > 0) {\r\n      Courses  =  \r\n      <table className='w-100'>\r\n        { CoursesTables }       \r\n      </table>\r\n    }\r\n    else {\r\n      Courses = <p>You haven't signed up for any courses yet.</p>\r\n    }\r\n   \r\n    return (    \r\n      <div>\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <h1>My courses:</h1>  \r\n          <Link className=\"btn btn-primary m-2\" to=\"/all-courses\">See all our courses</Link>                    \r\n        </div>\r\n      \r\n      { Courses }\r\n\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n","D:\\Project\\WSB\\JSCourses\\JSProject\\JSProject\\ClientApp\\src\\components\\TeacherCourses.js",["99","100","101","102","103","104","105"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactDOM } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Markup from 'react-html-markup';\r\n//import cupcake from '../resources/img/cupcake.png';\r\n\r\nvar materialsTemp0 = [\r\n    [\r\n        'img',\r\n        'https://media.wired.com/photos/598e35fb99d76447c4eb1f28/16:9/w_2123,h_1194,c_limit/phonepicutres-TA.jpg'\r\n    ],\r\n    [\r\n        'text',\r\n        `You probably have some idea of how fit you are. But assessing and recording baseline fitness scores can give you benchmarks against which to measure your progress. To assess your aerobic and muscular fitness, flexibility, and body composition, consider recording: \r\n    <ul>\r\n    <li>Your pulse rate before and immediately after walking 1 mile (1.6 kilometers\\)</li> \r\n    <li>How long it takes to walk 1 mile, or how long it takes to run 1.5 miles (2.41 kilometers)</li>\r\n    <li> How many standard or modified pushups you can do at a time</li>\r\n    <li>How far you can reach forward while seated on the floor with your legs in front of you Your waist circumference, just above your hipbones Your body mass index</li>\r\n    </ul>`\r\n    ]\r\n];\r\n\r\nvar materialsTemp1 = [\r\n    [\r\n        'img',\r\n        'https://cdn.mos.cms.futurecdn.net/v44n2mBJgaRoCkkFGjDtRP.jpeg'\r\n    ],\r\n    [\r\n        'text',\r\n        `How do I run without getting tired?\r\n    <b>Warm Up. Avoid running without a warm-up first.</b> Performing some dynamic stretches and low-intensity aerobic exercise for five to 15 minutes before a run can help to reduce injury risk by warming up your muscles. Factor each warm-up into your training plan to avoid running out of time or coming up with excuses.`\r\n    ]\r\n];\r\n\r\n\r\n//TODO delete hardcode\r\nvar teacherCourses = [\r\n    {\r\n        courseId: 0,\r\n        date: '01-02-22',\r\n        title: 'Get fit',\r\n        description: 'Dieting, excercise and other important things',\r\n        teacher: 'Chodakowska',\r\n        materials: materialsTemp0\r\n\r\n    },\r\n    {\r\n        courseId: 1,\r\n        date: '02-02-22',\r\n        title: 'Get fit 2',\r\n        description: 'Dieting, excercise and other important things',\r\n        teacher: 'Chodakowska',\r\n        materials: materialsTemp1\r\n    },\r\n];\r\n\r\nexport class TeacherCourses extends Component {\r\n    static displayName = TeacherCourses.name;\r\n//info dla niewtajemniczonych: teacher przegląda kursy do których jest dopisany jako nauczyciel (trzeba by w Course zrobić tak, żeby dało się go powiązać z Teacher),\r\n//teacher dodaje materiały do kursu\r\n//teacher NIE tworzy, nie usuwa kursów, (ze wzgl. czasowych pomińmy usuwanie materiałów - trochę klikadełek na froncie to zajmuje, layout bla bla bla czasu ni ma)\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //TODO: set courses to courses where teacher==logged user\r\n            courses: teacherCourses,\r\n            //TODO: set role to user role\r\n            role: 'teacher'\r\n        };\r\n    }\r\n//TODO: make page available only for users with teacher role\r\n\r\n    courseDetailsToggle(id) {\r\n        document.getElementById(`${id}`).classList.toggle(\"d-none\");\r\n    }\r\n\r\n    saveMaterials(courseId) {\r\n        //console.log('before' + this.state.courses[courseId].materials);\r\n        let materialType = document.getElementById(\"material-type\").value;\r\n        let material = document.getElementById(\"material\").value;\r\n        this.state.courses[courseId].materials.push([materialType, material]);\r\n        //console.log('after' + this.state.courses[courseId].materials);\r\n\r\n        //TODO save to database\r\n\r\n        this.closeAddMaterialsModal(courseId);\r\n        alert('Changes saved!');\r\n    }\r\n\r\n    openAddMaterialsModal(courseId) {        \r\n        document.getElementById(`${courseId}-modal`).style.display = 'block';\r\n    } \r\n\r\n    closeAddMaterialsModal(courseId) {\r\n        document.getElementById(`${courseId}-modal`).style.display = 'none';\r\n    }  \r\n\r\n    render() {\r\n//TODO jak będzie czas: wyświetlanie odpowiedniego inputu po wybraniu opcji z select\r\n        // var textInput;\r\n        // var select; \r\n        // let option;\r\n        // if (document.getElementById(\"material-type\")) {\r\n        //     option = document.getElementById(\"material-type\").options[select.selectedIndex].value;\r\n\r\n        //     if (option == \"img\") {\r\n        //         textInput = <input type=\"url\" class=\"form-control\" id=\"material\"></input>;\r\n        //     }\r\n        //     else if (option == \"text\") {\r\n        //         textInput = <textarea class=\"form-control\" id=\"material\" placeholder='Enter your text'></textarea>;\r\n        //     }\r\n        // }\r\n    \r\n        const addMaterialsForm =\r\n        <form>\r\n            <label>Type</label>\r\n            <select class=\"form-control\" name=\"material-type\" id=\"material-type\">\r\n                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                <option value=\"img\">Image</option>\r\n                <option value=\"text\">Text</option>\r\n            </select>\r\n            <label>Material</label>\r\n           {/* {textInput} */}\r\n           <textarea class=\"form-control\" id=\"material\" placeholder='Enter your text or image URL'></textarea>\r\n        </form>\r\n        ;\r\n\r\n        const addMaterialsModal = this.state.courses.map((course) => {\r\n            let modalId=`${course.courseId}-modal`;\r\n            return (\r\n                <div class=\"modal\" id={modalId}>\r\n                  <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                      <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"popupTitle\">Access new course</h5>\r\n                        <button type=\"button\" class=\"close\" onClick={() => {this.closeAddMaterialsModal(course.courseId)}} aria-label=\"Cancel\">\r\n                          <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                      </div>\r\n                      <div class=\"modal-body\">\r\n                        {addMaterialsForm}\r\n                      </div>\r\n                      <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => { this.closeAddMaterialsModal(course.courseId)}}>Close</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" onClick={() => {this.saveMaterials(course.courseId)}}>Save changes</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n        });\r\n\r\n\r\n        const CoursesTables = this.state.courses.map((course) => {\r\n            return (   \r\n                <table className=\"table table-hover w-100 mt-5 border-0\">\r\n                    <thead>\r\n                        <tr key={course.courseId} className=\"border-bottom\">\r\n                            <th className=\"border-0\">\r\n                           \r\n                                 <h2>{course.title}</h2>\r\n                               </th>\r\n                               <th className='d-flex justify-content-end'>\r\n                                <button className='btn btn-sm btn-light' onClick={() => { this.courseDetailsToggle(course.courseId) }}>Details</button>\r\n                                <button className='btn btn-sm btn-info' onClick={() => { this.openAddMaterialsModal(course.courseId) }}>\r\n                                    Add materials\r\n                                </button>\r\n                                </th>                             \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id={course.courseId} className='d-none'>\r\n                        <tr className='w-100 border-top-0 text-secondary'>\r\n                            <td className='col-4'>\r\n                                Course date: {course.date} <br />\r\n                                Teacher: {course.teacher} <br />\r\n                            </td>\r\n                            <td className='col-6'>\r\n                                {course.description}\r\n                            </td>\r\n                        </tr>\r\n                        {course.materials.map((material) => {\r\n                            if (material[0] == 'img') {\r\n                                return (\r\n                                    <tr>\r\n                                        <td colSpan={2}>\r\n                                            <img src={material[1]} alt=\"image\" className='w-100' />\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            else if (material[0] == 'text') {\r\n                                return (\r\n                                    <tr>\r\n                                        <td colSpan={2}>\r\n                                            <Markup className='text-justify' htmlString={material[1]} />\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n\r\n                        })\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        })\r\n\r\n        let Courses;\r\n        if (this.state.courses.length > 0) {\r\n            Courses =\r\n                <table className='w-100'>\r\n                    {CoursesTables}\r\n                </table>\r\n        }\r\n        else {\r\n            Courses = <p>You haven't signed up for any courses yet.</p>\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {addMaterialsModal}\r\n            <div>\r\n                <div className=\"d-flex justify-content-between mb-3\">\r\n                    <h1>My courses:</h1>\r\n                    <Link className=\"btn btn-primary m-2\" to=\"/all-courses\">See all our courses</Link>\r\n                </div>\r\n\r\n                {Courses}\r\n\r\n            </div>\r\n            </span>\r\n\r\n        );\r\n    }\r\n}\r\n",{"ruleId":"106","severity":1,"message":"107","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":4,"column":16,"nodeType":"108","messageId":"109","endLine":4,"endColumn":21},{"ruleId":"106","severity":1,"message":"112","line":4,"column":23,"nodeType":"108","messageId":"109","endLine":4,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":56,"column":66,"nodeType":"115","messageId":"116","endLine":56,"endColumn":68},{"ruleId":"117","severity":1,"message":"118","line":57,"column":26,"nodeType":"119","messageId":"120","endLine":57,"endColumn":28},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":113,"column":29,"nodeType":"119","messageId":"120","endLine":113,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":114,"column":28,"nodeType":"119","messageId":"120","endLine":114,"endColumn":30},{"ruleId":"117","severity":1,"message":"118","line":63,"column":25,"nodeType":"119","messageId":"120","endLine":63,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":72,"column":30,"nodeType":"119","messageId":"120","endLine":72,"endColumn":32},{"ruleId":"117","severity":1,"message":"118","line":81,"column":30,"nodeType":"119","messageId":"120","endLine":81,"endColumn":32},{"ruleId":"106","severity":1,"message":"121","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"122","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":17,"column":84,"nodeType":"125","messageId":"126","endLine":17,"endColumn":85,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"114","line":101,"column":46,"nodeType":"115","messageId":"116","endLine":101,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":102,"column":31,"nodeType":"119","messageId":"120","endLine":102,"endColumn":33},{"ruleId":"128","severity":1,"message":"129","line":106,"column":23,"nodeType":"130","endLine":106,"endColumn":78},{"ruleId":"117","severity":1,"message":"118","line":111,"column":37,"nodeType":"119","messageId":"120","endLine":111,"endColumn":39},{"ruleId":"106","severity":1,"message":"121","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"122","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":17,"column":84,"nodeType":"125","messageId":"126","endLine":17,"endColumn":85,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"114","line":184,"column":58,"nodeType":"115","messageId":"116","endLine":184,"endColumn":60},{"ruleId":"117","severity":1,"message":"118","line":185,"column":45,"nodeType":"119","messageId":"120","endLine":185,"endColumn":47},{"ruleId":"128","severity":1,"message":"129","line":189,"column":45,"nodeType":"130","endLine":189,"endColumn":100},{"ruleId":"117","severity":1,"message":"118","line":194,"column":50,"nodeType":"119","messageId":"120","endLine":194,"endColumn":52},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Modal' is defined but never used.","'ModalFooter' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'Container' is defined but never used.","no-useless-escape","Unnecessary escape character: \\).","TemplateElement","unnecessaryEscape",["132","133"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["134","135"],{"messageId":"136","fix":"137","desc":"138"},{"messageId":"139","fix":"140","desc":"141"},{"messageId":"136","fix":"142","desc":"138"},{"messageId":"139","fix":"143","desc":"141"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"148","text":"145"},{"range":"149","text":"147"},[800,801],"",[800,800],"\\",[821,822],[821,821]]